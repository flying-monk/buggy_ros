<launch>

    <!--including the launch file with a navigation world-->
    <include file="$(find buggy_descripation)/launch/office_world.launch" />

    <include file="$(find buggy_nav)/launch/amcl.launch" />

    <include file="$(find buggy_descripation)/launch/gazebo_display.launch"/>

    <!--   Buggy -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find buggy_descripation)/urdf/buggy_descripation.xacro'"/>

    <arg name="x" default="0"/>
    <arg name="y" default="0"/>
    <arg name="z" default="0"/>

      <!-- Spawn the robot model -->
    <node name="mybot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" 
        args="-urdf -param robot_description -model ebot -x $(arg x) -y $(arg y) -z $(arg z)" />

    <!--Map Server-->
    <arg name = "map_file" value = "$(find buggy_nav)/maps/sample_world.yaml"/>
    <node pkg="map_server" type="map_server" args = "$(arg map_file)" name="map_server"/>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen"> 
    <rosparam file="$(find buggy_nav)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find buggy_nav)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find buggy_nav)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find buggy_nav)/config/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find buggy_nav)/config/trajectory_planner.yaml" command="load" /> 
    <rosparam file="$(find buggy_nav)/config/dwa_local_planner_params.yaml" command="load" />   
    <rosparam file="$(find buggy_nav)/config/move_base_params.yaml" command="load" />

    <param name="move_base/DWAPlannerROS/yaw_goal_tolerance" value="1.0"/>
    <param name="move_base/DWAPlannerROS/xy_goal_tolerance" value="1.0"/>
    <param name="trajectory_planner" value="dwa_local_planner/DWAPlannerROS" />

    <remap from="scan" to="scan" />
    <remap from="cmd_vel" to="cmd_vel"/>
    <remap from="odom" to="odom" />
  </node> 

</launch>

